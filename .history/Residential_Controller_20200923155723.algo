//Rocket Elevators Residential Controller

"Inventory List
- Column
- Elevators (Cages)
- Call Buttons
- Doors
- Floor Request Buttons"


'DEFINE SECTION'
DEFINE column USING id AND status AND numberOfFloors AND numberOfElevators:
    ID: id,
    Status: status,
    ElevatorsList: SET TO empty List,
    SEQUENCE createElevatorsList USING numberOfElevators
        numberOfElevators = 2
        FOR EACH numberOfElevators
        ADD (INSTANTIATE elevator WITH "numberOfElevators" AND "IDLE") TO elevatorsList
    ENDSEQUENCE
    FloorsLevelList: SET TO empty List,
    SEQUENCE createFloorsLevelList USING numberOfElevators
        numberOfFloors = 10
        FOR EACH numberOfFloors
        ADD (INSTANTIATE floorLevel WITH numberOfFloors) TO floorsLevelList
    ENDSEQUENCE
ENDDEFINE
SET column1 TO INSTANTIATE column WITH 1 AND online



DEFINE elevator USING id AND status AND numberOfFloors 
    ID: id,
    Status: status,
    FloorRequestButtonList: SET TO empty List,
    SEQUENCE createFloorRequestButtonList USING numberOfFloors
        numberOfFloors = 10
        FOR EACH numberOfFloors
        ADD (INSTANTIATE floorRequestButton WITH numberOfFloors) TO FloorRequestButtonList
    ENDSEQUENCE
ENDDEFINE



DEFINE callButtonUP USING id AND status AND direction
    ID: id,
    Status: status,
    
ENDDEFINE



DEFINE elevatorsDoors USING 
ENDDEFINE


DEFINE floorsDoors USING 
ENDDEFINE


DEFINE floorSelectionButton USING 
ENDDEFINE




//DEFINE SECTION

------------------------------------------------------------------------------------------------

'Sequence Section'

SEQUENCE requestElevators USING floor AND direction
    
    CALL findElevator WITH floor AND direction returning bestElevator

    //if direction EQUAL TO "UP" THEN
    //If Direction Up selected, call elevatorA up TO requested floor
    //If Direction Down selected, call elevatorB down TO requestion floor        
    //When arriving at destination, open doors

ENDSEQUENCE   



//Request Level
SEQUENCE requestLevel USING (parameters X Y Z)
    Push desired Floor Button
    Close doors
    Start moving
    If going up, destination level > current level TO move
        Else do nothing
    If going down, desination level < current level TO move
        Else do nothing        
ENDSEQUENCE




//Elevator Origin
SEQUENCE elevatorOrigin USING (parametes X Y Z)
    originA = Level 1
    originB = Level 10
    If elevatorA moved THEN bring back TO originA
    If elevatorB moved THEN bring back TO originB

ENDSEQUENCE



//Find Elevator
SEQUENCE findElevator USING elevatorFloorLevel AND curentDirection

    READ elevatorFloorLevel AND curentDirection OF elevatorAA
    READ elevatorFloorLevel AND curentDirection OF elevatorAB     

ENDSEQUENCE


//Best Elevator
SEQUENCE bestElevator USING userFloorLevel, elevatorFloorLevel, curentDirection AND requestedDirection

    FOR requestedDirection EQUAL TO "UP"
            IF requestedDirection EQUAL TO "UP" 

ENDSEQUENCE
















DEFINE elevator USING id AND status
    Id: id,
    Status: status,
    direction: direction,
    //SEQUENCE createDirectionList USING direction_amount,
        //["UP", "DOWN", "IDLE"]
        //ENDSEQUENCE
    //floorLevelList: SET TO empty List,
    //SEQUENCE createFloorList USING floor_amount,
        //["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
        //ENDSEQUENCE
ENDDEFINE
SET elevatorA TO INSTANTIATE elevator WITH A AND online
SET elevatorA status TO offline
SET elevatorB TO INSTANTIATE elevator WITH B AND online
SET elevatorB status TO offline